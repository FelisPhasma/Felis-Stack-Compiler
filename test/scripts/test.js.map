{"version":3,"sources":["test.js"],"names":["alpha","thisFunc","has","arguments","map","n","test","t","a","b","f","x","fibonacci","Symbol","iterator","pre","cur","next","done","value","console","log"],"mappings":"iLAAA,QAASA,MAAT,CAAeC,CAAf,CAAyBC,CAAzB,CAA6C,CACzC,MAAOC,WAAU,CAAV,EAAe,IAAf,CAAsBD,CAChC,CAED,QAAQE,GAAR,CAAY,kBAAKC,GAAI,CAAT,CAAZ,C,CAIM,QAAM,CACRC,IADQ,gBACD,CAEN,CAHO,CAAN,CAMAC,CANA,4CASDC,CATC,SASGC,CATH,SAWN,QAASC,EAAT,CAAWC,CAAX,CAAoB,CAElB,MAAOA,6CACR,CACsB,CAAvB,IAAE,CAAF,CAAK,OAAL,I,CAEA,GAAIC,8BACDC,OAAOC,QADN,WACkB,CAClB,GAAIC,GAAM,CAAV,CAAaC,EAAM,CAAnB,CACA,MAAO,CACLC,IADK,gBACE,WACQ,CAACD,CAAD,CAAMD,EAAMC,CAAZ,CADR,CAEL,MADCD,EACD,UADMC,CACN,UAAO,CAAEE,OAAF,CAAeC,MAAOH,CAAtB,CACR,CAJI,CAMR,CATC,CAAJ,C,gFAYA,wBAAcJ,SAAd,4GAAyB,IAAhBP,EAAgB,aAEvB,GAAI,MAAJ,CACE,MACFe,QAAQC,GAAR,CAAYhB,CAAZ,CACD,C","file":"test.js","sourcesContent":["function alpha(thisFunc, has, a, lot, ofvars){\r\n    return arguments[0] + this + has;\r\n}\r\n\r\n[1,2,3].map(n => n + 1);\r\n\r\nclass SkinnedMesh {}\r\n\r\nconst obj = {\r\n    test() {\r\n        \r\n    }\r\n}\r\n\r\nconst t = `In ES5 this is\r\n not legal.`;\r\n\r\nvar [a, ,b] = [1,2,3];\r\n\r\nfunction f(x, ...y) {\r\n  // y is an Array\r\n  return x * y.length;\r\n}\r\nf(3, \"hello\", true) == 6\r\n\r\nlet fibonacci = {\r\n  [Symbol.iterator]() {\r\n    let pre = 0, cur = 1;\r\n    return {\r\n      next() {\r\n        [pre, cur] = [cur, pre + cur];\r\n        return { done: false, value: cur }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfor (var n of fibonacci) {\r\n  // truncate the sequence at 1000\r\n  if (n > 1000)\r\n    break;\r\n  console.log(n);\r\n}\r\n\r\n"]}